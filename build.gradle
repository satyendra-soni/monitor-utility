buildscript {
	ext {
		registeryHost = '192.168.1.119:8082'
		javaImage = 'openjdk:11-jre'
		now = new Date().getTime()

		springBootVersion = '2.7.3'
		springVersion = '5.3.22'
		lombokVersion = '1.18.24'
		bmuschkoDocker = '7.4.0'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.bmuschko.docker-spring-boot-application' version "$bmuschkoDocker"
}

group = 'com.adennet'
version = qualifyVersion(version, now)
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.netbeans.external:com-jcraft-jsch:RELEASE160'
	implementation 'com.slack.api:slack-api-client:1.27.2'


	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

def qualifyVersion(version, now) {
	if (version.toString().endsWith('SNAPSHOT')) {
		def hashStdOut = new ByteArrayOutputStream()
		exec {
			commandLine "git", "rev-parse", "--short", "HEAD"
			standardOutput = hashStdOut
		}

		return version.replace("BUILD", now + "-" + hashStdOut.toString().trim())
	}

	return version
}

docker {
	registryCredentials {
		url = "http://${registeryHost}"
		username = "$System.env.DOCKER_REG_USERNAME"
		password = "$System.env.DOCKER_REG_PASSWORD"
	}

	springBootApplication {
		baseImage = "${javaImage}"
		ports = [8080]
		images = ["${registeryHost}/${rootProject.name}:${version}"]
	}
}
